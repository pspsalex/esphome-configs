# SPDX-License-Identifier: MIT
# Copyright (c) 2025 Alex Popescu (@pspsalex)

esphome:
  on_boot:
    - priority: -100
      then:
        - lvgl.label.update:
            id: main_left_date_weekday
            text:
              time_format: "%A"
              time: local_time
        - lvgl.label.update:
            id: main_left_date_day
            text:
              time_format: "%d %b"
              time: local_time
        - lvgl.label.update:
            id: main_left_date_hour
            text:
              time_format: "%H"
              time: local_time
        - lvgl.label.update:
            id: main_left_date_minute
            text:
              time_format: ":%M"
              time: local_time
        - lvgl.label.update:
            id: boot_clock
            text:
              time_format: "%H:%M"
              time: local_time

time:
  - id: !extend local_time
    on_time_sync:
      - lvgl.label.update:
          id: main_left_date_weekday
          text:
            time_format: "%A"
            time: local_time
      - lvgl.label.update:
          id: main_left_date_day
          text:
            time_format: "%d %b"
            time: local_time
      - lvgl.label.update:
          id: main_left_date_hour
          text:
            time_format: "%H"
            time: local_time
      - lvgl.label.update:
          id: main_left_date_minute
          text:
            time_format: ":%M"
            time: local_time
    on_time:
      # Update minutes every minute
      - seconds: 0
        minutes: /1
        then:
          - lvgl.label.update:
              id: main_left_date_minute
              text:
                time_format: ":%M"
                time: local_time
          - lvgl.label.update:
              id: boot_clock
              text:
                time_format: "%H:%M"
                time: local_time
      # Update hours only when hour changes
      - seconds: 0
        minutes: /1
        # hours: /1
        then:
          - lvgl.label.update:
              id: main_left_date_hour
              text:
                time_format: "%H"
                time: local_time
      # Update date components only when date changes (daily at midnight)
      - seconds: 0
        minutes: /1
        # hours: 0
        then:
          - lvgl.label.update:
              id: main_left_date_weekday
              text:
                time_format: "%A"
                time: local_time
          - lvgl.label.update:
              id: main_left_date_day
              text:
                time_format: "%d %b"
                time: local_time

# Enable Home Assistant API
api:
  on_client_connected:
    then:
      - lvgl.widget.enable:
          - main_controls_dani_down
          - main_controls_dani_up
          - main_controls_dani_slider
          - main_controls_oli_down
          - main_controls_oli_slider
          - main_controls_oli_up
          - main_controls_eltern_down
          - main_controls_eltern_slider
          - main_controls_eltern_up
          - main_controls_living_rol_down
          - main_controls_living_rol_slider
          - main_controls_living_rol_up
          - main_controls_living_ros_down
          - main_controls_living_ros_slider
          - main_controls_living_ros_up
          - main_controls_dach_rollers
          - main_controls_office_light
          - main_controls_keller_light_long
          - main_controls_dach_light

  on_client_disconnected:
    then:
      - lvgl.widget.disable:
          - main_controls_dani_down
          - main_controls_dani_up
          - main_controls_dani_slider
          - main_controls_oli_down
          - main_controls_oli_slider
          - main_controls_oli_up
          - main_controls_eltern_down
          - main_controls_eltern_slider
          - main_controls_eltern_up
          - main_controls_living_rol_down
          - main_controls_living_rol_slider
          - main_controls_living_rol_up
          - main_controls_living_ros_down
          - main_controls_living_ros_slider
          - main_controls_living_ros_up
          - main_controls_dach_rollers
          - main_controls_office_light
          - main_controls_keller_light_long
          - main_controls_dach_light

binary_sensor:
  - platform: homeassistant
    id: kg_office_light
    entity_id: light.kg_office_light
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: main_controls_office_light
            state:
              checked: !lambda return x;
        - lvgl.image.update:
            id: main_controls_office_light_state
            src: !lambda |-
              return x ? id(icon_lightbulb_on_medium) : id(icon_lightbulb_off_medium);

  - platform: homeassistant
    id: dg_dach_light
    entity_id: switch.dg_studio_lights
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: main_controls_dach_light
            state:
              checked: !lambda return x;
        - lvgl.image.update:
            id: main_controls_dach_light_state
            src: !lambda |-
              return x ? id(icon_lightbulb_on_medium) : id(icon_lightbulb_off_medium);

  - platform: homeassistant
    id: kg_keller_light_long
    entity_id: light.kg_keller_light_long
    publish_initial_state: true
    on_state:
      then:
        - lvgl.widget.update:
            id: main_controls_keller_light_long
            state:
              checked: !lambda return x;
        - lvgl.image.update:
            id: main_controls_keller_light_long_state
            src: !lambda |-
              return x ? id(icon_lightbulb_on_medium) : id(icon_lightbulb_off_medium);

text_sensor:
  - platform: homeassistant
    id: cover_dach_rol_state
    entity_id: cover.dach_large_roller_cover_1
    on_value:
      then:
        - lambda: |-
            ESP_LOGI("cover_dach_rol_state", "State changed to: %s", x.c_str());
            auto y = id(cover_dach_ros_state).state;
            if ((x == "opening") || (x=="closing") || (y == "opening") || (y=="closing")) {
              lv_img_set_src(id(main_controls_dach_rollers_label), id(icon_hourglass_medium));
            } else {
              lv_img_set_src(id(main_controls_dach_rollers_label), id(icon_scene_medium));
            }
  - platform: homeassistant
    id: cover_dach_ros_state
    entity_id: cover.dach_large_roller_cover_1
    on_value:
      then:
        - lambda: |-
            ESP_LOGI("cover_dach_ros_state", "State changed to: %s", x.c_str());
            auto y = id(cover_dach_rol_state).state;
            if ((x == "opening") || (x=="closing") || (y == "opening") || (y=="closing")) {
              lv_img_set_src(id(main_controls_dach_rollers_label), id(icon_hourglass_medium));
            } else {
              lv_img_set_src(id(main_controls_dach_rollers_label), id(icon_scene_medium));
            }

packages:
  sensor_dani: !include
    file: "../../snippets/sensors_rollers.yaml"
    vars:
      name: dani
      ha_entity: dani_rollers_cover_1
  sensor_oli: !include
    file: "../../snippets/sensors_rollers.yaml"
    vars:
      name: oli
      ha_entity: oli_roller_cover_1
  sensor_eltern: !include
    file: "../../snippets/sensors_rollers.yaml"
    vars:
      name: eltern
      ha_entity: eltern_rollers_cover_1
  sensor_living_rol: !include
    file: "../../snippets/sensors_rollers.yaml"
    vars:
      name: living_rol
      ha_entity: living_large_rollers_cover_1
  sensor_living_ros: !include
    file: "../../snippets/sensors_rollers.yaml"
    vars:
      name: living_ros
      ha_entity: living_small_roller_cover_1

lvgl:
  pages:
    - id: main_page
      bg_opa: COVER
      bg_color: 0xffffff
      widgets:
        - obj:
            id: main_left_pane
            styles: clean_obj
            width: 460
            height: 522
            x: 9
            y: 9
            layout:
              type: FLEX
              flex_flow: ROW_WRAP
              flex_align_main: START
              flex_align_cross: SPACE_EVENLY
              flex_align_track: SPACE_AROUND

            widgets:
              - obj:
                  id: main_left_date_date
                  width: 460
                  height: 40
                  styles: clean_obj
                  layout:
                    type: FLEX
                    flex_flow: ROW
                    flex_align_main: SPACE_BETWEEN
                  widgets:
                    - label:
                        id: main_left_date_weekday
                        text: "Aaaaaaa"
                        text_font: "roboto_32_bold"
                    - label:
                        id: main_left_date_day
                        text: "xx Xxxxxxx"
                        text_font: "roboto_32"
              - obj:
                  width: 460
                  height: 120
                  styles: clean_obj
                  id: main_left_date_time
                  layout:
                    type: FLEX
                    flex_flow: ROW
                    flex_align_main: CENTER
                    flex_align_cross: CENTER
                  widgets:
                    - label:
                        id: main_left_date_hour
                        text: "--"
                        text_font: "roboto_96_num_bold"
                    - label:
                        id: main_left_date_minute
                        text: ":--"
                        text_font: "roboto_96_num"

              - obj:
                  id: main_left_splitter1
                  width: 460
                  height: 2
                  bg_opa: COVER
                  bg_color: 0xd9d9d9
                  styles: clean_obj

              - image:
                  id: main_left_weather_logo_now
                  width: 130
                  height: 130
                  src: icon_partly_cloudy_day_large

              - obj:
                  id: main_left_weather_data
                  height: 150
                  width: 200
                  bg_opa: TRANSP
                  styles: clean_obj
                  layout:
                    type: FLEX
                    flex_flow: COLUMN
                    flex_align_main: CENTER
                    flex_align_cross: CENTER
                    flex_align_track: CENTER
                  widgets:
                    - obj:
                        id: main_left_weather_temp
                        width: 155
                        height: 90
                        radius: 0
                        styles: clean_obj
                        layout:
                          type: FLEX
                          flex_flow: ROW
                          flex_align_main: CENTER
                        widgets:
                          - label:
                              id: main_left_weather_temp_now
                              text: "??"
                              height: 90
                              text_font: "roboto_80_num_bold"
                          - label:
                              id: main_left_weather_temp_txt
                              text: "\u00b0C"
                              text_font: "roboto_32"
                    - label:
                        id: main_left_weather_temp_feels
                        text: "Feels like: ??\u00b0C"
                        text_font: "roboto_16"
                    - label:
                        id: main_left_weather_temp_rain
                        text: "Rain: ??%"
                        text_font: "roboto_16"

              - obj:
                  id: main_left_weather_details
                  width: 110
                  height: 150
                  styles: clean_obj
                  layout:
                    type: FLEX
                    flex_flow: COLUMN
                    flex_align_main: SPACE_BETWEEN
                  widgets:
                    - obj:
                        id: main_left_weather_details_sunrise_cont
                        styles: clean_obj
                        width: SIZE_CONTENT
                        height: 38
                        layout:
                          type: FLEX
                          flex_flow: ROW
                          flex_align_main: START
                          flex_align_cross: CENTER
                        widgets:
                          - image:
                              id: main_left_weather_details_sunrise_logo
                              src: icon_sunny_small
                          - label:
                              id: main_left_weather_details_sunrise
                              text: "hh:mm"
                              text_font: "roboto_16"
                    - obj:
                        id: main_left_weather_details_sunset_cont
                        styles: clean_obj
                        width: SIZE_CONTENT
                        height: 38
                        layout:
                          type: FLEX
                          flex_flow: ROW
                          flex_align_main: START
                          flex_align_cross: CENTER
                        widgets:
                          - image:
                              id: main_left_weather_details_sunset_logo
                              src: icon_twilight_small
                          - label:
                              id: main_left_weather_details_sunset
                              text: "HH:MM"
                              text_font: "roboto_16"
                    - obj:
                        id: main_left_weather_details_wind_cont
                        styles: clean_obj
                        bg_color: 0xffffff
                        bg_opa: COVER
                        width: SIZE_CONTENT
                        height: 38
                        layout:
                          type: FLEX
                          flex_flow: ROW
                          flex_align_main: START
                          flex_align_cross: CENTER
                        widgets:
                          - image:
                              id: main_left_weather_details_wind_logo
                              src: icon_wind_small
                          - label:
                              id: main_left_weather_details_wind
                              text: "??km/h"
                              text_font: "roboto_16"

              - obj:
                  id: main_left_splitter_1
                  width: 460
                  height: 2
                  bg_opa: COVER
                  bg_color: 0xd9d9d9
                  styles: clean_obj

              - obj:
                  id: main_left_forecast
                  styles: clean_obj
                  width: 460
                  height: SIZE_CONTENT
                  layout:
                    type: FLEX
                    flex_flow: ROW
                    flex_align_main: SPACE_EVENLY
                    flex_align_cross: START
                  widgets:
                    - obj:
                        id: main_left_forecast_4h
                        styles: clean_obj
                        layout:
                          type: FLEX
                          flex_flow: COLUMN
                          flex_align_main: START
                          flex_align_cross: CENTER
                        widgets:
                          - label:
                              id: main_left_forecast_4h_time
                              text: "hh:mm"
                              text_font: "roboto_24"
                          - image:
                              id: main_left_forecast_4h_icon
                              src: icon_sunny_small
                          - label:
                              id: main_left_forecast_4h_temp
                              text: "??\u00b0C / ??%"
                              text_font: "roboto_24"
                    - obj:
                        id: main_left_forecast_8h
                        styles: clean_obj
                        layout:
                          type: FLEX
                          flex_flow: COLUMN
                          flex_align_main: START
                          flex_align_cross: CENTER
                        widgets:
                          - label:
                              id: main_left_forecast_8h_time
                              text: "hh:mm"
                              text_font: "roboto_24"
                          - image:
                              id: main_left_forecast_8h_icon
                              src: icon_sunny_small
                          - label:
                              id: main_left_forecast_8h_temp
                              text_font: "roboto_24"
                              text: "??\u00b0C / ??%"
                    - obj:
                        id: main_left_forecast_12h
                        styles: clean_obj
                        layout:
                          type: FLEX
                          flex_flow: COLUMN
                          flex_align_main: START
                          flex_align_cross: CENTER
                        widgets:
                          - label:
                              id: main_left_forecast_12h_time
                              text: "hh:mm"
                              text_font: "roboto_24"
                          - image:
                              id: main_left_forecast_12h_icon
                              src: icon_sunny_small
                          - label:
                              id: main_left_forecast_12h_temp
                              text: "??\u00b0C / ??%"
                              text_font: "roboto_24"

        - obj:
            id: main_pane_splitter
            width: 4
            x: 478
            y: 9
            height: 522
            bg_opa: COVER
            bg_color: 0xd9d9d9
            styles: clean_obj

        - obj:
            id: main_right_pane
            styles: clean_obj
            x: 491
            y: 60
            width: 460
            height: 470
            layout:
              type: FLEX
              flex_flow: ROW_WRAP
              flex_align_main: SPACE_BETWEEN
              flex_align_cross: START
            bg_color: 0xffffff
            bg_opa: COVER
            widgets:
              - obj: !include
                  file: "snippets/rollers.yaml"
                  vars:
                    name: "dani"
                    label: "Dani"
                    ha_entity: "dani_rollers_cover_1"

              - obj: !include
                  file: "snippets/rollers.yaml"
                  vars:
                    name: "oli"
                    label: "Oli"
                    ha_entity: "oli_roller_cover_1"

              - obj: !include
                  file: "snippets/rollers.yaml"
                  vars:
                    name: "eltern"
                    label: "Eltern"
                    ha_entity: "eltern_rollers_cover_1"

              - obj: !include
                  file: "snippets/rollers.yaml"
                  vars:
                    name: "living_rol"
                    label: "Living L"
                    ha_entity: "living_large_rollers_cover_1"

              - obj: !include
                  file: "snippets/rollers.yaml"
                  vars:
                    name: "living_ros"
                    label: "Living S"
                    ha_entity: "living_small_roller_cover_1"

              - obj:
                  id: main_right_studio_night
                  styles: main_controls
                  layout:
                    type: FLEX
                    flex_flow: ROW_WRAP
                    flex_align_main: SPACE_BETWEEN
                    flex_align_cross: CENTER
                    flex_align_track: SPACE_BETWEEN
                  widgets:
                    - button:
                        id: main_controls_dach_rollers
                        state:
                          disabled: true
                        width: 130
                        height: 85
                        styles: clean_obj
                        focused:
                          styles: clean_obj
                        pressed:
                          styles: clean_obj
                        edited:
                          styles: clean_obj
                        on_click:
                          - homeassistant.action:
                              action: scene.turn_on
                              data:
                                entity_id: scene.dg_studio_night
                        widgets:
                          - image:
                              id: main_controls_dach_rollers_label
                              src: icon_scene_medium
                              align: center
                    - label:
                        text: "Dach Rollers"
                        styles: main_controls_label
                        long_mode: DOT

              - obj:
                  id: main_right_keller_light
                  styles: main_controls
                  layout:
                    type: FLEX
                    flex_flow: ROW_WRAP
                    flex_align_main: SPACE_BETWEEN
                    flex_align_cross: CENTER
                    flex_align_track: SPACE_BETWEEN
                  widgets:
                    - button:
                        id: main_controls_keller_light_long
                        state:
                          disabled: true
                        width: 130
                        height: 85
                        checkable: true
                        styles:
                          - main_controls_button
                        pressed:
                          styles:
                            - main_controls_button_pressed
                        focused:
                          styles:
                            - main_controls_button_focused
                        checked:
                          styles:
                            - main_controls_button_checked
                        widgets:
                          - image:
                              id: main_controls_keller_light_long_state
                              src: icon_lightbulb_off_medium
                              align: center
                        on_click:
                          - homeassistant.action:
                              action: light.toggle
                              data:
                                entity_id: light.kg_keller_light_long
                          - if:
                              condition:
                                binary_sensor.is_on: kg_keller_light_long
                              then:
                                - homeassistant.action:
                                    # The "new" state is not yet propagated
                                    action: light.turn_off
                                    data:
                                      entity_id: light.kg_keller_light_big
                              else:
                                - homeassistant.action:
                                    action: light.turn_on
                                    data:
                                      entity_id: light.kg_keller_light_big

                    - label:
                        text: "Keller Lights"
                        styles: main_controls_label
                        long_mode: DOT

              - obj: !include
                  file: "snippets/lights.yaml"
                  vars:
                    name: "office"
                    label: "Office Light"
                    ha_action: "light.toggle"
                    ha_entity: "light.kg_office_light"

              - obj: !include
                  file: "snippets/lights.yaml"
                  vars:
                    name: "dach"
                    label: "Dach Light"
                    ha_action: "switch.toggle"
                    ha_entity: "switch.dg_studio_light_wall_switch"
